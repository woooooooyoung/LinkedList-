LinkedList
데이터를 저장하는 자료구조
이중 연결 리스트를 사용하여 데이터를 저장함
각 노드가 데이터와 포인터를 가지고 있으면서 노드(node)들이 한 줄로 쭉 연결되어 있는 방식
데이터를 포함하는 노드들을 연결하여 각 노드가 데이터와 다음(next), 이전(prev) 링크 포인터(변수)를 갖게 되는 자료 구조(단일, 이중, 환원)
LinkedList는 추가와 삭제가 편리하고 빠르며 메모리 사용량은 작지만 특정 노드의 검색에는 시간이 걸린다,






Singke LinkedList (단일 연결 리스트)
단방향으로 노드들을 연결한 간단한 자료 구조
1□▷ -> 2□▷ -> 3□▷ -> 4□▷ -> ○

Double LinkerList (이중 연결 리스트)
이전 노드와 다음 노드를 가리키는 포인터를 모두 갖고 있어 양방향으로 탐색이 가능한 자료 구조.
○ <-  1◁□▷ <-> 2◁□▷ <-> 3◁□▷ <-> 4◁□▷ -> ○

Circular LinkerList (환원 연결 리스트)
일반 연결리스트에서 마지막 노드를 처음 노드에 연결시켜만든 구조
4◁□▷ <-  1◁□▷ <-> 2◁□▷ <-> 3◁□▷ <-> 4◁□▷ -> 1◁□▷

□:head      ◁ : prev      ▷:next      ○ : null	